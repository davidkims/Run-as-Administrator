name: Analyze PowerShell and Upload SARIF

on:
  push:
    branches: ["main"]
  pull_request_target:
    branches: ["main"]

permissions:
  contents: write
  pages: write
  id-token: write
  security-events: write

jobs:
  powershell-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üìù Create test script
        run: |
          mkdir -p scripts
          echo 'Write-Host "Hello, world!"' > scripts/sample.ps1

      - name: ‚öôÔ∏è Generate SARIF 2.1.0 (PowerShell)
        shell: pwsh
        run: |
          $sarif = @{
            '$schema' = 'https://json.schemastore.org/sarif-2.1.0.json'
            version = '2.1.0'
            runs = @(@{
              tool = @{
                driver = @{
                  name = 'PSScriptAnalyzer'
                  version = '1.21.0'
                  rules = @(@{
                    id = 'PSAvoidUsingWriteHost'
                    name = 'Avoid using Write-Host'
                    shortDescription = @{ text = 'Avoid using Write-Host' }
                    fullDescription = @{ text = 'Use Write-Output instead of Write-Host' }
                    defaultConfiguration = @{ level = 'warning' }
                    properties = @{
                      tags = @('style')
                      precision = 'high'
                    }
                  })
                }
              }
              results = @(@{
                ruleId = 'PSAvoidUsingWriteHost'
                message = @{ text = 'Avoid using Write-Host in production scripts.' }
                locations = @(@{
                  physicalLocation = @{
                    artifactLocation = @{ uri = 'scripts/sample.ps1' }
                    region = @{ startLine = 1; startColumn = 1 }
                  }
                })
                partialFingerprints = @{
                  primaryLocationLineHash = 'f1e2d3c4b5a69788'
                }
              })
            })
          }
          $sarif | ConvertTo-Json -Depth 10 | Out-File results.sarif -Encoding UTF8

      - name: üì§ Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        id: upload_step

      - name: üåê Convert SARIF to HTML fallback
        if: steps.upload_step.outcome == 'failure'
        run: |
          npm install -g @microsoft/sarif-multitool
          mkdir -p report
          sarif-multitool rewrite results.sarif -o report/results.sarif
          sarif-multitool export report/results.sarif --format html -o report/index.html
          echo "<hr><h2>User Profile Analysis</h2><pre>No profile issues detected</pre>" >> report/index.html

      - name: üöÄ Deploy HTML to GitHub Pages
        if: steps.upload_step.outcome == 'failure'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report
