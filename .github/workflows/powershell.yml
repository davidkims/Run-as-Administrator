name: PowerShell SARIF Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write
  id-token: write
  security-events: write

jobs:
  analyze:
    name: Run PSScriptAnalyzer and Upload SARIF
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üõ† Create Sample PowerShell Script
        run: |
          mkdir -p scripts
          echo 'Write-Host "Hello, world!"' > scripts/sample.ps1

      - name: üìÑ Generate SARIF File (UTF-8, no BOM)
        shell: pwsh
        run: |
          $sarif = @{
            '$schema' = 'https://json.schemastore.org/sarif-2.1.0.json'
            version = '2.1.0'
            runs = @(@{
              tool = @{
                driver = @{
                  name = 'PSScriptAnalyzer'
                  version = '1.21.0'
                  rules = @(@{
                    id = 'PSAvoidUsingWriteHost'
                    name = 'Avoid using Write-Host'
                    shortDescription = @{ text = 'Avoid using Write-Host' }
                    fullDescription = @{ text = 'Use Write-Output or Write-Verbose instead.' }
                    defaultConfiguration = @{ level = 'warning' }
                    properties = @{
                      tags = @('style')
                      precision = 'high'
                    }
                  })
                }
              }
              results = @(@{
                ruleId = 'PSAvoidUsingWriteHost'
                message = @{ text = 'Avoid using Write-Host in production scripts.' }
                locations = @(@{
                  physicalLocation = @{
                    artifactLocation = @{ uri = 'scripts/sample.ps1' }
                    region = @{ startLine = 1; startColumn = 1 }
                  }
                })
                partialFingerprints = @{ primaryLocationLineHash = '304eec5277011328' }
              })
            })
          }
          $sarif | ConvertTo-Json -Depth 10 | Out-File results.sarif -Encoding UTF8

      - name: üì§ Upload SARIF to GitHub Code Scanning
        id: sarif-upload
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
        continue-on-error: true

      - name: ‚ö†Ô∏è Install SARIF Multitool
        if: steps.sarif-upload.outcome == 'failure'
        run: npm install -g @microsoft/sarif-multitool

      - name: üåê Generate HTML Report from SARIF
        if: steps.sarif-upload.outcome == 'failure'
        run: |
          mkdir -p report
          sarif-multitool rewrite results.sarif -o report/results.sarif
          echo "<html><body><h1>Fallback Report</h1><pre>" > report/index.html
          cat results.sarif >> report/index.html
          echo "</pre></body></html>" >> report/index.html

      - name: üöÄ Deploy to GitHub Pages (Fallback)
        if: steps.sarif-upload.outcome == 'failure'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report
