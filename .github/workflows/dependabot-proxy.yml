name: Dependabot Updates via Proxy

on:
  schedule:
    - cron: '0 0 * * 1' # 매주 월요일 00:00
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main]
    paths:
      - '**/pom.xml'
      - '.github/**'

permissions:
  contents: write
  pull-requests: write

# 공통 프록시 환경 (시크릿 필요)
env:
  HTTP_PROXY: ${{ secrets.HTTP_PROXY }}
  HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
  NO_PROXY: ${{ secrets.NO_PROXY }}

jobs:
  run-dependabot:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    env:
      # env 컨텍스트 대신 secrets 직접 참조 (에러 방지)
      MAVEN_OPTS: "-Dhttp.proxyHost=${{ secrets.PROXY_HOST }} -Dhttp.proxyPort=${{ secrets.PROXY_PORT }} -Dhttps.proxyHost=${{ secrets.PROXY_HOST }} -Dhttps.proxyPort=${{ secrets.PROXY_PORT }}"
      JAVA_TOOL_OPTIONS: "-Dhttp.proxyHost=${{ secrets.PROXY_HOST }} -Dhttp.proxyPort=${{ secrets.PROXY_PORT }} -Dhttps.proxyHost=${{ secrets.PROXY_HOST }} -Dhttps.proxyPort=${{ secrets.PROXY_PORT }}"
    steps:
      - name: Configure apt proxy (system-wide)
        run: |
          echo "Acquire::http::Proxy \"${HTTP_PROXY}\";" | sudo tee /etc/apt/apt.conf.d/99proxy
          echo "Acquire::https::Proxy \"${HTTPS_PROXY}\";" | sudo tee -a /etc/apt/apt.conf.d/99proxy

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Dependabot for Maven (via proxy)
        run: |
          docker run --rm \
            -e GITHUB_ACCESS_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e HTTP_PROXY="${HTTP_PROXY}" \
            -e HTTPS_PROXY="${HTTPS_PROXY}" \
            -e NO_PROXY="${NO_PROXY}" \
            -v "${{ github.workspace }}":/home/dependabot/app \
            ghcr.io/dependabot/dependabot-core update maven /home/dependabot/app

      - name: Run Dependabot for Docker (via proxy)
        run: |
          docker run --rm \
            -e GITHUB_ACCESS_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e HTTP_PROXY="${HTTP_PROXY}" \
            -e HTTPS_PROXY="${HTTPS_PROXY}" \
            -e NO_PROXY="${NO_PROXY}" \
            -v "${{ github.workspace }}":/home/dependabot/app \
            ghcr.io/dependabot/dependabot-core update docker /home/dependabot/app

  validate-pr:
    if: ${{ github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Dhttp.proxyHost=${{ secrets.PROXY_HOST }} -Dhttp.proxyPort=${{ secrets.PROXY_PORT }} -Dhttps.proxyHost=${{ secrets.PROXY_HOST }} -Dhttps.proxyPort=${{ secrets.PROXY_PORT }}"
      JAVA_TOOL_OPTIONS: "-Dhttp.proxyHost=${{ secrets.PROXY_HOST }} -Dhttp.proxyPort=${{ secrets.PROXY_PORT }} -Dhttps.proxyHost=${{ secrets.PROXY_HOST }} -Dhttps.proxyPort=${{ secrets.PROXY_PORT }}"
    steps:
      - name: Configure apt proxy (system-wide)
        run: |
          echo "Acquire::http::Proxy \"${HTTP_PROXY}\";" | sudo tee /etc/apt/apt.conf.d/99proxy
          echo "Acquire::https::Proxy \"${HTTPS_PROXY}\";" | sudo tee -a /etc/apt/apt.conf.d/99proxy

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build with Maven
        run: mvn -B -V -e -DskipTests package

      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Install system packages via proxy (example)
        env:
          http_proxy: ${{ env.HTTP_PROXY }}
          https_proxy: ${{ env.HTTPS_PROXY }}
          no_proxy: ${{ env.NO_PROXY }}
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
