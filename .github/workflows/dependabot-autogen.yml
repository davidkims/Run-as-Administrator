name: Dependabot Auto Generation

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'
  pull_request:
    branches:
      - main
    paths:
      - '**'
  push:
    branches:
      - 'dependabot/**'

jobs:
  generate-artifacts:
    name: Generate reusable assets
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Generate Java, Maven, Docker and Red Hat templates
        run: |
          bash scripts/dependabot-autogen.sh generated

      - name: Build Maven sample project
        working-directory: generated/maven
        run: |
          if command -v mvn >/dev/null 2>&1; then
            mvn -B -ntp package
          else
            echo "Maven is not available on this runner" >&2
            exit 1
          fi

      - name: Prepare container build context
        run: |
          cp generated/maven/target/dependabot-automation-1.0.0.jar generated/docker/dependabot-automation.jar
          cp generated/maven/target/dependabot-automation-1.0.0.jar generated/redhat/dependabot-automation.jar

      - name: Build Docker image
        run: |
          docker buildx build \
            --file generated/docker/Dockerfile \
            --tag dependabot-autogen:latest \
            generated/docker

      - name: Build Red Hat compatible image
        run: |
          docker buildx build \
            --file generated/redhat/Containerfile \
            --tag dependabot-autogen:rhel \
            generated/redhat

      - name: Upload generated templates
        uses: actions/upload-artifact@v4
        with:
          name: dependabot-generated-assets
          path: generated
          if-no-files-found: error

      - name: Clean workspace artifacts
        if: always()
        run: |
          rm -rf generated
