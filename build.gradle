plugins {
  id 'java'
  id 'org.springframework.boot' version '3.3.3'
  id 'io.spring.dependency-management' version '1.1.6'
}
group = System.getenv('GROUP_ID') ?: 'com.example'
version = '0.0.1-SNAPSHOT'
ext { set('flyway.version', '10.12.0') }   // for BOM override (reference)
java { toolchain { languageVersion = JavaLanguageVersion.of(Integer.valueOf(System.getenv('JAVA_PRIMARY') ?: '17')) } }
repositories { mavenCentral() }
dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
  implementation 'org.mapstruct:mapstruct:1.5.5.Final'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'org.postgresql:postgresql'
  runtimeOnly 'com.mysql:mysql-connector-j'
  // 확실히 10.12.0 적용
  implementation 'org.flywaydb:flyway-core:10.12.0'
  implementation 'org.liquibase:liquibase-core'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.testcontainers:junit-jupiter:1.20.1'
  testImplementation 'org.testcontainers:postgresql:1.20.1'
  testImplementation 'org.testcontainers:mysql:1.20.1'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}
tasks.withType(Test).configureEach { useJUnitPlatform() }
